function drawCircle(radius, colour, fillColour) {
  ctx.beginPath();
  ctx.arc(center.x, center.y, radius, 0, 2 * Math.PI, false);
  ctx.lineWidth = 1;
  ctx.strokeStyle = colour;

  if (fillColour) {
    ctx.fillStyle = fillColour;
    ctx.fill();
  }

  ctx.stroke();
}

function drawCircle(radius, colour, fillColour) {
  ctx.beginPath();
  ctx.arc(center.x, center.y, radius, 0, 2 * Math.PI, false);
  ctx.lineWidth = 1;
  ctx.strokeStyle = colour;

  if (fillColour) {
    ctx.fillStyle = fillColour;
    ctx.fill();
  }

  ctx.stroke();
}
for (counter = -9; counter < 360 - 9; counter += PIECES) {
  buildRing(
    doubleTopMin,
    doubleTopMax,
    counter,
    counter + PIECES,
    count++ % 2 ? "red" : "#03ff03"
  );

  buildRing(
    tripleMin,
    tripleMax,
    counter,
    counter + PIECES,
    count % 2 ? "#03ff03" : "red"
  );

  buildRing(
    doubleTopMin,
    tripleMax,
    counter,
    counter + PIECES,
    count % 2 ? "white" : "black"
  );

  buildRing(
    tripleMin,
    twentyFiveTopMin,
    counter,
    counter + PIECES,
    count % 2 ? "white" : "black"
  );

  printLabel(counter, pos++);
}
function buildRing(min, max, startDeg, endDeg, colour) {
  ctx.beginPath();
  ctx.fillStyle = colour;
  ctx.strokeStyle = colour;

  for (var counter = startDeg; counter <= endDeg; counter += 1) {
    var doubleTopMaxPoint = centerVector
      .clone()
      .add(
        lengthVector
          .clone()
          .norm()
          .rotateDeg(counter)
          .multiply(new Victor(max, max))
      );
    ctx.lineTo(doubleTopMaxPoint.x, doubleTopMaxPoint.y);
  }
  for (counter = endDeg; counter >= startDeg; counter -= 1) {
    var doubleTopMinPoint = centerVector
      .clone()
      .add(
        lengthVector
          .clone()
          .norm()
          .rotateDeg(counter)
          .multiply(new Victor(min, min))
      );

    ctx.lineTo(doubleTopMinPoint.x, doubleTopMinPoint.y);
  }

  ctx.fill();
  ctx.stroke();
}
function printLabel(counter, pos) {
  var labels = [
    20, 1, 18, 4, 13, 6, 10, 15, 2, 17, 3, 19, 7, 16, 8, 11, 14, 9, 12, 5,
  ];

  var firstWireOfPeice = counter + 9;
  var x = centerVector
    .clone()
    .add(
      lengthVector
        .clone()
        .norm()
        .rotateDeg(firstWireOfPeice)
        .multiply(new Victor(doubleTopMax, doubleTopMax))
    );

  var adjust;

  if (firstWireOfPeice < 55 || firstWireOfPeice > 295) {
    adjust = new Victor(radius - 10, radius - 10);
  } else if (firstWireOfPeice > 95 && firstWireOfPeice < 265) {
    adjust = new Victor(radius + 10, radius + 10);
  } else {
    adjust = new Victor(radius, radius);
  }

  var edge = centerVector
    .clone()
    .add(
      lengthVector.clone().norm().rotateDeg(firstWireOfPeice).multiply(adjust)
    );

  drawLabel(labels[pos], edge, x);
}
function drawRadials() {
  ctx.lineWidth = 2;
  ctx.strokeStyle = "white";

  for (counter = 9; counter < 360; counter += PIECES) {
    var offSet = new Victor(0, 10);

    x = centerVector
      .clone()
      .add(
        lengthVector
          .clone()
          .norm()
          .rotateDeg(counter)
          .multiply(new Victor(doubleTopMax, doubleTopMax))
      );

    drawRadial(x);
  }

  function drawRadials() {
    ctx.lineWidth = 2;
    ctx.strokeStyle = "white";

    for (counter = 9; counter < 360; counter += PIECES) {
      var offSet = new Victor(0, 10);

      x = centerVector
        .clone()
        .add(
          lengthVector
            .clone()
            .norm()
            .rotateDeg(counter)
            .multiply(new Victor(doubleTopMax, doubleTopMax))
        );

      drawRadial(x);
    }
  }
}
<pre></pre>;
drawCircle(doubleTopMax, "silver");
drawCircle(doubleTopMin, "silver");
drawCircle(tripleMax, "silver");
drawCircle(tripleMin, "silver");
drawCircle(twentyFiveTopMin, "silver", "green");
drawCircle(bullTopMin, "silver", "red");
